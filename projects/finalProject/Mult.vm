function Mult.mult 2

// overwrite THIS and THAT values
push constant 4503
pop pointer 0
push constant 4504
pop pointer 1

// multiplication algorithm
label WHILE_LOOP
push local 0
push argument 0
add
pop local 0
push constant 1
push local 1
add
pop local 1
push argument 1
push local 1
eq
not
if-goto WHILE_LOOP

// call Mult.store
push local 0 
push argument 0 
push argument 1
call Mult.store 3

// prepare return value
push local 0  

return

function Mult.store 0

// store result of multiplication using THIS
push argument 0
pop this 0

// store the operands of multiplication using THAT
push argument 1
pop that 0
push argument 2
pop that 1

return 